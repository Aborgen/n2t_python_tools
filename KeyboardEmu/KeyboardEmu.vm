function KeyboardEmu.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push constant 6
pop static 0
push argument 0
pop this 0
push argument 1
pop this 4
push pointer 0
call KeyboardEmu._initMainSegment 1
pop temp 0
push pointer 0
return
function KeyboardEmu.Color 0
push argument 0
pop pointer 0
push this 0
call Rectangle.Color 1
return
function KeyboardEmu.Scale 0
push argument 0
pop pointer 0
push this 4
return
function KeyboardEmu.TopLeftCorner 2
push argument 0
pop pointer 0
push this 0
call Rectangle.Origin 1
pop local 0
push this 0
call Rectangle.InnerWidth 1
push constant 2
call Math.divide 2
push this 0
call Rectangle.InnerHeight 1
push constant 2
call Math.divide 2
call Point.new 2
pop local 1
push local 0
call Point.X 1
push local 0
call Point.Y 1
call Point.new 2
push local 1
call Point.subPointStatic 2
return
function KeyboardEmu.InnerWidth 0
push argument 0
pop pointer 0
push this 0
call Rectangle.InnerWidth 1
return
function KeyboardEmu.OuterWidth 0
push argument 0
pop pointer 0
push this 0
call Rectangle.OuterWidth 1
return
function KeyboardEmu.InnerHeight 0
push argument 0
pop pointer 0
push this 0
call Rectangle.InnerHeight 1
return
function KeyboardEmu.OuterHeight 0
push argument 0
pop pointer 0
push this 0
call Rectangle.OuterHeight 1
return
function KeyboardEmu.Origin 0
push argument 0
pop pointer 0
push this 0
call Rectangle.Origin 1
return
function KeyboardEmu.Body 0
push argument 0
pop pointer 0
push this 0
return
function KeyboardEmu.monitorKeyboard 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push constant 0
eq
not
if-goto WHILE_END1
call Keyboard.keyPressed 0
pop local 0
goto WHILE_EXP1
label WHILE_END1
push pointer 0
push local 0
call KeyboardEmu.toggleKey 2
pop temp 0
push local 0
pop local 1
label WHILE_EXP2
push local 0
push constant 0
eq
not
not
if-goto WHILE_END2
call Keyboard.keyPressed 0
pop local 0
goto WHILE_EXP2
label WHILE_END2
push pointer 0
push local 1
call KeyboardEmu.toggleKey 2
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function KeyboardEmu.toggleKey 0
push argument 0
pop pointer 0
push argument 1
push constant 31
gt
push argument 1
push constant 127
lt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push constant 32
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
push constant 5
push constant 4
call KeyboardSegment.toggleKey 3
pop temp 0
label IF_FALSE1
push argument 1
push constant 33
eq
push argument 1
push constant 49
eq
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
push constant 33
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 1
push constant 4
push constant 13
call KeyboardSegment.toggleKey 3
pop temp 0
label IF_FALSE3
push this 1
push constant 1
push constant 1
call KeyboardSegment.toggleKey 3
pop temp 0
label IF_FALSE2
push argument 1
push constant 34
eq
push argument 1
push constant 39
eq
or
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 1
push constant 34
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 1
push constant 4
push constant 13
call KeyboardSegment.toggleKey 3
pop temp 0
label IF_FALSE5
push this 1
push constant 3
push constant 12
call KeyboardSegment.toggleKey 3
pop temp 0
label IF_FALSE4
push constant 0
return
label IF_FALSE0
push argument 1
push constant 139
gt
push argument 1
push constant 153
lt
or
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
return
label IF_FALSE6
push argument 1
push constant 129
gt
push argument 1
push constant 134
lt
or
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
return
label IF_FALSE7
push constant 0
return
function KeyboardEmu._initMainSegment 7
push argument 0
pop pointer 0
push constant 16
pop local 4
push pointer 0
push static 0
push local 4
call KeyboardSegment.new 3
pop this 1
push static 0
push local 4
call Math.multiply 2
pop local 5
push constant 0
pop local 6
label WHILE_EXP0
push local 6
push local 5
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
push local 6
push constant 29
eq
push local 6
push constant 61
eq
or
push local 6
push constant 64
eq
or
push local 6
push constant 77
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
call KeyboardSegment.placeTripleHorizontal 1
pop temp 0
push constant 0
not
pop local 1
push local 6
push constant 2
add
pop local 6
label IF_FALSE0
push local 1
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 6
push constant 32
eq
push local 6
push constant 46
eq
or
push local 6
push constant 48
eq
or
push local 6
push constant 80
eq
or
push local 6
push constant 94
eq
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 1
call KeyboardSegment.placeDoubleHorizontal 1
pop temp 0
push constant 0
not
pop local 1
push local 6
push constant 1
add
pop local 6
label IF_FALSE2
label IF_FALSE1
push local 1
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 6
push constant 82
eq
push local 6
push constant 83
eq
or
push local 6
push constant 92
eq
or
push local 6
push constant 93
eq
or
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 1
call KeyboardSegment.placeDoubleVertical 1
pop temp 0
push constant 0
not
pop local 1
label IF_FALSE4
label IF_FALSE3
push local 1
not
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 6
push constant 84
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 1
call KeyboardSegment.placeSpacebar 1
pop temp 0
push constant 0
not
pop local 1
push local 6
push constant 7
add
pop local 6
label IF_FALSE6
label IF_FALSE5
push local 1
not
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 1
call KeyboardSegment.placeSingle 1
pop temp 0
label IF_FALSE7
push local 6
push constant 0
eq
push local 6
push constant 5
eq
or
push local 6
push constant 10
eq
or
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push this 1
call KeyboardSegment.placeEmpty 1
pop temp 0
push local 6
push constant 1
add
pop local 6
label IF_FALSE8
push local 6
push constant 1
add
pop local 6
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
