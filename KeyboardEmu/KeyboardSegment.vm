function KeyboardSegment.new 0
push constant 9
call Memory.alloc 1
pop pointer 0
push constant 2
pop static 0
push constant 1
pop static 1
push constant 3
pop static 2
push static 0
push argument 0
call KeyboardEmu.Scale 1
call Math.multiply 2
pop this 0
push static 1
push argument 0
call KeyboardEmu.Scale 1
call Math.multiply 2
pop this 1
push static 2
push argument 0
call KeyboardEmu.Scale 1
call Math.multiply 2
pop this 2
push argument 1
push argument 2
call Array2d.new 2
pop this 5
push argument 0
call KeyboardEmu.TopLeftCorner 1
pop this 3
push pointer 0
call KeyboardSegment._initKeySlot 1
pop this 4
push pointer 0
push argument 2
call KeyboardSegment._initBody 2
pop this 6
push argument 0
call KeyboardEmu.Color 1
pop this 7
push constant 0
pop this 8
push pointer 0
return
function KeyboardSegment.Width 0
push argument 0
pop pointer 0
push this 6
call Rectangle.InnerWidth 1
return
function KeyboardSegment.Height 0
push argument 0
pop pointer 0
push this 6
call Rectangle.InnerHeight 1
return
function KeyboardSegment.KeySize 0
push argument 0
pop pointer 0
push this 1
push this 2
add
return
function KeyboardSegment.Body 0
push argument 0
pop pointer 0
push this 6
return
function KeyboardSegment.toggleKey 1
push argument 0
pop pointer 0
push argument 1
push constant 0
lt
push argument 2
push constant 0
lt
or
push argument 1
push this 5
call Array2d.RowCount 1
push constant 1
sub
gt
or
push argument 2
push this 5
call Array2d.ColumnCount 1
push constant 1
sub
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 5
push argument 1
push argument 2
call Array2d.get 3
pop local 0
push local 0
call Rectangle.toggleFillColor 1
pop temp 0
push constant 0
return
function KeyboardSegment.placeTripleHorizontal 2
push argument 0
pop pointer 0
push this 4
call Point.X 1
push this 4
call Point.Y 1
call Point.new 2
pop local 0
push local 0
push this 2
push constant 0
call Point.new 2
call Point.addPoint 2
pop temp 0
push local 0
push this 2
push this 1
push this 7
call DrawRectangle.horizontal3to1 4
pop local 1
push local 1
push this 0
push constant 2
call Math.divide 2
push this 1
add
push constant 0
call Rectangle.grow 3
pop temp 0
push pointer 0
push local 1
call KeyboardSegment._place 2
pop temp 0
push pointer 0
push local 1
call KeyboardSegment._place 2
pop temp 0
push pointer 0
push local 1
call KeyboardSegment._place 2
pop temp 0
push constant 0
return
function KeyboardSegment.placeDoubleHorizontal 2
push argument 0
pop pointer 0
push this 4
call Point.X 1
push this 4
call Point.Y 1
call Point.new 2
pop local 0
push local 0
push this 2
push constant 2
call Math.divide 2
push constant 0
call Point.new 2
call Point.addPoint 2
pop temp 0
push local 0
push this 2
push this 1
push this 7
call DrawRectangle.horizontal2to1 4
pop local 1
push local 1
push this 0
push constant 2
call Math.divide 2
push constant 0
call Rectangle.grow 3
pop temp 0
push pointer 0
push local 1
call KeyboardSegment._place 2
pop temp 0
push pointer 0
push local 1
call KeyboardSegment._place 2
pop temp 0
push constant 0
return
function KeyboardSegment.placeDoubleVertical 2
push argument 0
pop pointer 0
push this 4
call Point.X 1
push this 4
call Point.Y 1
call Point.new 2
pop local 0
push local 0
push this 2
push this 1
push this 7
call DrawRectangle.square 4
pop local 1
push local 1
push constant 0
push this 0
push constant 2
call Math.divide 2
call Rectangle.grow 3
pop temp 0
push pointer 0
push local 1
call KeyboardSegment._place 2
pop temp 0
push constant 0
return
function KeyboardSegment.placeSpacebar 3
push argument 0
pop pointer 0
push this 4
call Point.X 1
push this 4
call Point.Y 1
call Point.new 2
pop local 0
push local 0
push this 2
push constant 4
call Math.multiply 2
push this 0
push constant 2
call Math.divide 2
add
push constant 0
call Point.new 2
call Point.addPoint 2
pop temp 0
push constant 10
pop local 2
push local 0
push this 2
push local 2
push this 1
push this 7
call DrawRectangle.scaledRectangle 5
pop local 1
push local 1
push this 0
push this 0
push constant 2
call Math.divide 2
call Rectangle.grow 3
pop temp 0
push pointer 0
push local 1
call KeyboardSegment._place 2
pop temp 0
label WHILE_EXP0
push local 2
push constant 3
gt
not
if-goto WHILE_END0
push pointer 0
push local 1
call KeyboardSegment._place 2
pop temp 0
push local 2
push constant 1
sub
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function KeyboardSegment.placeSingle 2
push argument 0
pop pointer 0
push this 4
call Point.X 1
push this 4
call Point.Y 1
call Point.new 2
pop local 0
push local 0
push this 2
push this 1
push this 7
call DrawRectangle.square 4
pop local 1
push pointer 0
push local 1
call KeyboardSegment._place 2
pop temp 0
push constant 0
return
function KeyboardSegment.placeEmpty 0
push argument 0
pop pointer 0
push pointer 0
push constant 0
call KeyboardSegment._place 2
pop temp 0
push constant 0
return
function KeyboardSegment._place 0
push argument 0
pop pointer 0
push this 5
push argument 1
call Array2d.push 2
pop temp 0
push pointer 0
call KeyboardSegment._advanceKeySlot 1
pop temp 0
push constant 0
return
function KeyboardSegment._expandBoundingBox 0
push argument 0
pop pointer 0
push constant 0
return
function KeyboardSegment._advanceKeySlot 2
push argument 0
pop pointer 0
push this 5
call Array2d.ColumnIndex 1
push constant 0
eq
push this 5
call Array2d.RowIndex 1
push constant 0
eq
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
call Point.X 1
push this 0
add
pop local 0
push this 3
call Point.Y 1
push this 2
push constant 2
push this 0
call Math.multiply 2
push this 5
call Array2d.RowIndex 1
call Math.multiply 2
add
add
pop local 1
push this 4
call Point.dispose 1
pop temp 0
push local 0
push local 1
call Point.new 2
pop this 4
goto IF_END0
label IF_FALSE0
push this 4
push pointer 0
call KeyboardSegment.KeySize 1
push constant 0
call Point.new 2
call Point.addPoint 2
pop temp 0
label IF_END0
push constant 0
return
function KeyboardSegment._initKeySlot 0
push argument 0
pop pointer 0
push this 3
push this 0
call Point.addStatic 2
return
function KeyboardSegment._initBody 2
push argument 0
pop pointer 0
push pointer 0
call KeyboardSegment.KeySize 1
push argument 1
call Math.multiply 2
pop local 0
push this 3
call Point.X 1
push local 0
push constant 2
call Math.divide 2
add
pop local 1
push local 1
push this 3
call Point.Y 1
call Point.new 2
push local 0
push constant 0
push constant 0
push constant 0
not
call Rectangle.new 5
return
function KeyboardSegment.dispose 0
push argument 0
pop pointer 0
call origin.dispose 0
pop temp 0
push this 5
call Array2d.dispose 1
pop temp 0
push this 6
call Rectangle.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
